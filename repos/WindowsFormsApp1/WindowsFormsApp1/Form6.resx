<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>